<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:imageViewer="clr-namespace:Lan.ImageViewer"
    xmlns:shapes="clr-namespace:Lan.Shapes.Shapes;assembly=Lan.Shapes"
    xmlns:sketchBoard="clr-namespace:Lan.SketchBoard;assembly=Lan.SketchBoard"
    xmlns:system="clr-namespace:System;assembly=System.Runtime">


    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Lan.ImageViewer;component/Geometries.xaml" />
    </ResourceDictionary.MergedDictionaries>


    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

    <system:Double x:Key="FontSize">18</system:Double>
    <system:Double x:Key="IconSize">16</system:Double>
    <GridLength x:Key="TextBlockWidth">300</GridLength>

    <Style x:Key="IconButton" TargetType="Button">

        <Setter Property="Margin" Value="2" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="2">

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Path
                                Width="{TemplateBinding imageViewer:GeometryIconElement.IconSize}"
                                Height="{TemplateBinding imageViewer:GeometryIconElement.IconSize}"
                                Data="{TemplateBinding imageViewer:GeometryIconElement.IconGeometry}"
                                Fill="{TemplateBinding Foreground}"
                                Stretch="Uniform" />
                            <ContentPresenter
                                Grid.Column="1"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center" />
                        </Grid>


                    </Border>


                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                            <Setter Property="BorderBrush" Value="Lime" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>


    </Style>

    <Style TargetType="imageViewer:ImageViewer">
        <Setter Property="Background" Value="Black" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="imageViewer:ImageViewer">
                    <Border
                        x:Name="BorderContainer"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">

                        <Canvas
                            x:Name="containerCanvas"
                            Panel.ZIndex="3"
                            ClipToBounds="True"
                            IsHitTestVisible="True">

                            <Line
                                x:Name="HorizontalLine"
                                Panel.ZIndex="1"
                                Stroke="{TemplateBinding CrossLineColor}"
                                StrokeDashArray="{TemplateBinding StrokeDashArray}"
                                StrokeThickness="{TemplateBinding StrokeThickness}"
                                Visibility="{TemplateBinding ShowCrossLine,
                                                             Converter={StaticResource BooleanToVisibilityConverter}}" />

                            <Line
                                x:Name="VerticalLine"
                                Panel.ZIndex="1"
                                Stroke="{TemplateBinding CrossLineColor}"
                                StrokeDashArray="{TemplateBinding StrokeDashArray}"
                                StrokeThickness="{TemplateBinding StrokeThickness}"
                                Visibility="{TemplateBinding ShowCrossLine,
                                                             Converter={StaticResource BooleanToVisibilityConverter}}" />

                            <Grid Margin="2,5" Panel.ZIndex="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="{StaticResource TextBlockWidth}" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <TextBlock
                                    x:Name="TbMousePosition"
                                    VerticalAlignment="Center"
                                    Panel.ZIndex="1"
                                    FontSize="{StaticResource FontSize}"
                                    Foreground="Lime" />
                                <Button
                                    x:Name="BtnFit"
                                    Grid.Column="1"
                                    Panel.ZIndex="1"
                                    imageViewer:GeometryIconElement.IconGeometry="{StaticResource AutoFit}"
                                    imageViewer:GeometryIconElement.IconSize="{StaticResource IconSize}"
                                    BorderBrush="Lime"
                                    BorderThickness="2"
                                    Foreground="Lime"
                                    Style="{StaticResource IconButton}" />
                            </Grid>

                            <Grid x:Name="GridContainer" ClipToBounds="True">

                                <!--<Grid.RenderTransform>
                                    <TransformGroup>
                                        <MatrixTransform x:Name="transform" />
                                        <ScaleTransform x:Name="scaleTransform" />
                                    </TransformGroup>
                                </Grid.RenderTransform>-->
                                <Image
                                    x:Name="ImageViewer"
                                    Width="{Binding Source.PixelWidth, RelativeSource={RelativeSource Self}}"
                                    Height="{Binding Source.PixelHeight, RelativeSource={RelativeSource Self}}"
                                    Panel.ZIndex="1"
                                    RenderOptions.BitmapScalingMode="NearestNeighbor"
                                    RenderOptions.EdgeMode="Aliased"
                                    SnapsToDevicePixels="True"
                                    Source="{TemplateBinding ImageSource}"
                                    Stretch="Uniform" />

                                <sketchBoard:SketchBoard
                                    x:Name="SketchBoard"
                                    Width="{Binding Path=Width, ElementName=ImageViewer}"
                                    Height="{Binding ElementName=ImageViewer, Path=Height}"
                                    Margin="2"
                                    Panel.ZIndex="2"
                                    Background="Transparent"
                                    ClipToBounds="True"
                                    Focusable="True"
                                    SketchBoardDataManager="{TemplateBinding SketchBoardDataManager}" />
                            </Grid>


                        </Canvas>


                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="imageViewer:ImageViewerBasic">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="imageViewer:ImageViewerBasic">

                    <Border
                        x:Name="BorderContainer"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">

                        <Canvas
                            x:Name="containerCanvas"
                            Panel.ZIndex="3"
                            ClipToBounds="True"
                            IsHitTestVisible="True">

                            <Line
                                x:Name="HorizontalLine"
                                Panel.ZIndex="1"
                                Stroke="{TemplateBinding CrossLineColor}"
                                StrokeDashArray="{TemplateBinding StrokeDashArray}"
                                StrokeThickness="{TemplateBinding StrokeThickness}"
                                Visibility="{TemplateBinding ShowCrossLine,
                                                             Converter={StaticResource BooleanToVisibilityConverter}}" />
                            <Line
                                x:Name="VerticalLine"
                                Panel.ZIndex="1"
                                Stroke="{TemplateBinding CrossLineColor}"
                                StrokeDashArray="{TemplateBinding StrokeDashArray}"
                                StrokeThickness="{TemplateBinding StrokeThickness}"
                                Visibility="{TemplateBinding ShowCrossLine,
                                                             Converter={StaticResource BooleanToVisibilityConverter}}" />

                            <Grid
                                Canvas.Left="10"
                                Canvas.Top="15"
                                Panel.ZIndex="1"
                                Background="Transparent">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="{StaticResource TextBlockWidth}" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <TextBlock
                                    x:Name="TbMousePosition"
                                    VerticalAlignment="Center"
                                    FontSize="{StaticResource FontSize}"
                                    Foreground="Lime" />

                                <Button
                                    x:Name="BtnFit"
                                    Grid.Column="1"
                                    imageViewer:GeometryIconElement.IconGeometry="{StaticResource AutoFit}"
                                    imageViewer:GeometryIconElement.IconSize="{StaticResource IconSize}"
                                    BorderBrush="Gray"
                                    BorderThickness="2"
                                    Foreground="White"
                                    Style="{StaticResource IconButton}" />

                            </Grid>




                            <Grid
                                x:Name="GridContainer"
                                ClipToBounds="True"
                                Row="0">

                                <!--<Grid.RenderTransform>
                                    <TransformGroup>
                                        <MatrixTransform x:Name="transform" />
                                        <ScaleTransform x:Name="scaleTransform" />
                                    </TransformGroup>
                                </Grid.RenderTransform>-->
                                <Image
                                    x:Name="ImageViewer"
                                    Width="{Binding Source.PixelWidth, RelativeSource={RelativeSource Self}}"
                                    Height="{Binding Source.PixelHeight, RelativeSource={RelativeSource Self}}"
                                    Panel.ZIndex="1"
                                    RenderOptions.BitmapScalingMode="NearestNeighbor"
                                    RenderOptions.EdgeMode="Aliased"
                                    SnapsToDevicePixels="True"
                                    Source="{TemplateBinding ImageSource}"
                                    Stretch="Uniform" />

                            </Grid>

                        </Canvas>

                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="DrawShapeTypeStyle" TargetType="ListBoxItem">
        <Setter Property="Height" Value="35" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">

                        <ContentPresenter />

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="GeometryTypeTemplate" DataType="{x:Type imageViewer:GeometryType}">
        <Button
            Margin="2"
            Command="{Binding Path=DataContext.ChooseGeometryTypeCommand, RelativeSource={RelativeSource AncestorType=ItemsControl, Mode=FindAncestor}}"
            CommandParameter="{Binding}">
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Foreground" Value="White" />
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="BorderThickness" Value="2" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border
                                    x:Name="Container"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    ToolTip="{Binding Description}">

                                    <StackPanel Orientation="Horizontal">
                                        <Path
                                            Width="{StaticResource IconSize}"
                                            Height="{StaticResource IconSize}"
                                            Margin="5"
                                            Data="{Binding IconGeometry}"
                                            Stretch="Uniform"
                                            Stroke="{TemplateBinding Foreground}"
                                            StrokeThickness="1" />
                                    </StackPanel>

                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>

                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="Lime" />
                            <Setter Property="BorderBrush" Value="Lime" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

    </DataTemplate>

    <DataTemplate DataType="{x:Type shapes:Rectangle}">
        <StackPanel Orientation="Vertical">
            <TextBlock Text="Rectangle: " />
            <TextBlock>
                <Run Text="{Binding Id, Mode=OneWay}" />
                <Run Text="{Binding TopLeft, StringFormat='; {}{0:f2};'}" />
                <Run Text="{Binding BottomRight, StringFormat='{}{0:f2}'}" />
            </TextBlock>
        </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type shapes:Ellipse}">
        <StackPanel Orientation="Vertical">
            <TextBlock Text="ellipse: " />
            <TextBlock>
                <Run Text="{Binding Id, Mode=OneWay}" />
                <Run Text="{Binding Center, StringFormat='{}{0:f2};'}" />
                <Run Text="{Binding RadiusX, StringFormat='{}{0:f2}, '}" />
                <Run Text="{Binding RadiusY, StringFormat='{}{0:f2}'}" />
            </TextBlock>
        </StackPanel>
    </DataTemplate>


</ResourceDictionary>