<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:imageViewer="clr-namespace:Lan.ImageViewer"
    xmlns:shapes="clr-namespace:Lan.Shapes.Shapes;assembly=Lan.Shapes"
    xmlns:sketchBoard="clr-namespace:Lan.SketchBoard;assembly=Lan.SketchBoard"
    xmlns:system="clr-namespace:System;assembly=System.Runtime">


    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Lan.ImageViewer;component/Geometries.xaml" />

            <!--<ResourceDictionary Source="pack://application:,,,/HandyControl;component/Themes/SkinDefault.xaml" />
               <ResourceDictionary Source="pack://application:,,,/HandyControl;component/Themes/Theme.xaml" />-->
    
    </ResourceDictionary.MergedDictionaries>


    <imageViewer:BooleanToVisibilityCollapsedInverseConverter x:Key="BooleanToVisibilityCollapsedConverter" />

    <system:Double x:Key="FontSize">14</system:Double>
    <system:Double x:Key="IconSize">22</system:Double>
    <GridLength x:Key="TextBlockWidth">50</GridLength>


    <Style x:Key="DefaultBorderTextBlockStyle" TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Foreground" Value="LimeGreen" />
        <Setter Property="Margin" Value="2,0,0,0" />
    </Style>


    <Style x:Key="BorderedTextBlock.Compact" TargetType="imageViewer:BorderedTextBlock">
        <Setter Property="Margin" Value="2" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="LimeGreen" />
        <Setter Property="Width" Value="45" />
        <Setter Property="TextBlockStyle" Value="{StaticResource DefaultBorderTextBlockStyle}" />
    </Style>


    <Style x:Key="IconButton" TargetType="Button">

        <Setter Property="Margin" Value="2" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="2">

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Path
                                Width="{TemplateBinding imageViewer:GeometryIconElement.IconSize}"
                                Height="{TemplateBinding imageViewer:GeometryIconElement.IconSize}"
                                HorizontalAlignment="Center"
                                Data="{TemplateBinding imageViewer:GeometryIconElement.IconGeometry}"
                                Fill="{TemplateBinding Foreground}"
                                Stretch="Uniform" />
                            <ContentPresenter
                                Grid.Column="1"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center" />
                        </Grid>


                    </Border>


                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                            <Setter Property="Foreground" Value="Lime" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>


    </Style>


    <Style x:Key="ImageViewer.Wide" TargetType="imageViewer:ImageViewer">
        <Setter Property="Background" Value="Black" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="imageViewer:ImageViewer">
                    <Border
                        x:Name="BorderContainer"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">

                        <Canvas
                            x:Name="containerCanvas"
                            Panel.ZIndex="3"
                            ClipToBounds="True"
                            Focusable="True"
                            IsHitTestVisible="True">

                            <Border
                                Canvas.Left="0"
                                Canvas.Top="0"
                                Panel.ZIndex="1"
                                Background="Black"
                                BorderBrush="LightGray"
                                BorderThickness="0,1,1,0">
                                <Grid>

                                    <Grid.Resources>
                                        <Style TargetType="imageViewer:BorderedTextBlock">
                                            <Setter Property="BorderBrush" Value="LightGray" />
                                            <Setter Property="BorderThickness" Value="1,0,0,1" />
                                        </Style>
                                    </Grid.Resources>

                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>

                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="25" />
                                        <ColumnDefinition Width="100" />
                                    </Grid.ColumnDefinitions>


                                    <imageViewer:BorderedTextBlock Background="Transparent" Text="X" />

                                    <!--<Label Content="X" />-->

                                    <imageViewer:BorderedTextBlock
                                        Grid.Row="0"
                                        Grid.Column="1"
                                        Text="{Binding MousePositionToImage.X, StringFormat='{}{0:f0}', RelativeSource={RelativeSource AncestorType=imageViewer:ImageViewerBasic}}" />

                                    <imageViewer:BorderedTextBlock
                                        Grid.Row="1"
                                        Grid.Column="0"
                                        Text="Y" />

                                    <imageViewer:BorderedTextBlock
                                        Grid.Row="1"
                                        Grid.Column="1"
                                        Text="{Binding MousePositionToImage.Y, StringFormat='{}{0:f0}', RelativeSource={RelativeSource AncestorType=imageViewer:ImageViewerBasic}}" />

                                    <imageViewer:BorderedTextBlock
                                        Grid.Row="2"
                                        Grid.Column="0"
                                        Text="S" />

                                    <imageViewer:BorderedTextBlock
                                        Grid.Row="2"
                                        Grid.Column="1"
                                        Text="{Binding LocalScale, StringFormat='{}{0:p2}', RelativeSource={RelativeSource AncestorType=imageViewer:ImageViewerBasic}}" />




                                    <imageViewer:BorderedTextBlock
                                        Grid.Row="3"
                                        Grid.Column="0"
                                        Text="GV" />


                                    <imageViewer:BorderedTextBlock
                                        Grid.Row="3"
                                        Grid.Column="1"
                                        Text="{Binding PixelValueString, RelativeSource={RelativeSource AncestorType=imageViewer:ImageViewerBasic}}" />


                                    <imageViewer:BorderedTextBlock
                                        Grid.Row="4"
                                        Grid.Column="0"
                                        Text="Fit" />


                                    <Button
                                        x:Name="BtnFit"
                                        Grid.Row="4"
                                        Grid.Column="1"
                                        imageViewer:GeometryIconElement.IconGeometry="{StaticResource AutoFit}"
                                        imageViewer:GeometryIconElement.IconSize="{StaticResource IconSize}">

                                        <Path
                                            Width="{StaticResource IconSize}"
                                            Margin="1"
                                            Data="{StaticResource AutoFit}"
                                            Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button, Mode=FindAncestor}}"
                                            Stretch="Uniform"
                                            Stroke="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button, Mode=FindAncestor}}" />

                                        <Button.Style>

                                            <Style TargetType="Button">
                                                <Setter Property="Margin" Value="0" />
                                                <Setter Property="Background" Value="Transparent" />
                                                <Setter Property="BorderThickness" Value="1,0,0,1" />
                                                <Setter Property="BorderBrush" Value="LightGray" />
                                                <Setter Property="Foreground" Value="Lime" />

                                                <Setter Property="Template">

                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="Button">
                                                            <Border
                                                                Margin="{TemplateBinding Margin}"
                                                                Background="{TemplateBinding Background}"
                                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                                BorderThickness="{TemplateBinding BorderThickness}">
                                                                <ContentPresenter />
                                                            </Border>
                                                        </ControlTemplate>
                                                    </Setter.Value>

                                                </Setter>

                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Foreground" Value="LimeGreen" />
                                                        <Setter Property="Cursor" Value="Hand" />
                                                    </Trigger>
                                                </Style.Triggers>

                                            </Style>

                                        </Button.Style>

                                    </Button>

                                </Grid>

                            </Border>

                            <Grid x:Name="GridContainer" ClipToBounds="True">

                                <!--<Grid.RenderTransform>
                                    <TransformGroup>
                                        <MatrixTransform x:Name="transform" />
                                        <ScaleTransform x:Name="scaleTransform" />
                                    </TransformGroup>
                                </Grid.RenderTransform>-->
                                <Image
                                    x:Name="ImageViewer"
                                    Width="{Binding Source.PixelWidth, RelativeSource={RelativeSource Self}}"
                                    Height="{Binding Source.PixelHeight, RelativeSource={RelativeSource Self}}"
                                    Panel.ZIndex="1"
                                    RenderOptions.BitmapScalingMode="NearestNeighbor"
                                    RenderOptions.EdgeMode="Aliased"
                                    SnapsToDevicePixels="True"
                                    Source="{TemplateBinding ImageSource}"
                                    Stretch="Uniform" />

                                <sketchBoard:SketchBoard
                                    x:Name="SketchBoard"
                                    Width="{Binding Path=Width, ElementName=ImageViewer}"
                                    Height="{Binding ElementName=ImageViewer, Path=Height}"
                                    Margin="2"
                                    Panel.ZIndex="2"
                                    Background="Transparent"
                                    ClipToBounds="True"
                                    Focusable="True"
                                    SketchBoardDataManager="{TemplateBinding SketchBoardDataManager}" />

                                <Line
                                    x:Name="HorizontalLine"
                                    Panel.ZIndex="3"
                                    Stroke="{TemplateBinding CrossLineColor}"
                                    StrokeDashArray="{TemplateBinding StrokeDashArray}"
                                    StrokeThickness="{TemplateBinding StrokeThickness}"
                                    Visibility="{TemplateBinding ShowCrossLine,
                                                                 Converter={StaticResource BooleanToVisibilityCollapsedConverter}}" />

                                <Line
                                    x:Name="VerticalLine"
                                    Panel.ZIndex="3"
                                    Stroke="{TemplateBinding CrossLineColor}"
                                    StrokeDashArray="{TemplateBinding StrokeDashArray}"
                                    StrokeThickness="{TemplateBinding StrokeThickness}"
                                    Visibility="{TemplateBinding ShowCrossLine,
                                                                 Converter={StaticResource BooleanToVisibilityCollapsedConverter}}" />
                            </Grid>


                        </Canvas>


                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>




    <Style x:Key="ImageViewer.Compact" TargetType="imageViewer:ImageViewer">
        <Setter Property="Background" Value="Black" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="imageViewer:ImageViewer">
                    <Border
                        x:Name="BorderContainer"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">

                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <Canvas
                                x:Name="containerCanvas"
                                Panel.ZIndex="0"
                                ClipToBounds="True"
                                DockPanel.Dock="Top"
                                Focusable="True"
                                IsHitTestVisible="True">

                                <Grid x:Name="GridContainer" ClipToBounds="True">

                                    <!--<Grid.RenderTransform>
                                    <TransformGroup>
                                        <MatrixTransform x:Name="transform" />
                                        <ScaleTransform x:Name="scaleTransform" />
                                    </TransformGroup>
                                </Grid.RenderTransform>-->
                                    <Image
                                        x:Name="ImageViewer"
                                        Width="{Binding Source.PixelWidth, RelativeSource={RelativeSource Self}}"
                                        Height="{Binding Source.PixelHeight, RelativeSource={RelativeSource Self}}"
                                        Panel.ZIndex="1"
                                        RenderOptions.BitmapScalingMode="NearestNeighbor"
                                        RenderOptions.EdgeMode="Aliased"
                                        SnapsToDevicePixels="True"
                                        Source="{TemplateBinding ImageSource}"
                                        Stretch="Uniform" />

                                    <sketchBoard:SketchBoard
                                        x:Name="SketchBoard"
                                        Width="{Binding Path=Width, ElementName=ImageViewer}"
                                        Height="{Binding ElementName=ImageViewer, Path=Height}"
                                        Margin="2"
                                        Panel.ZIndex="2"
                                        Background="Transparent"
                                        ClipToBounds="True"
                                        Focusable="True"
                                        SketchBoardDataManager="{TemplateBinding SketchBoardDataManager}" />

                                    <Line
                                        x:Name="HorizontalLine"
                                        Panel.ZIndex="3"
                                        Stroke="{TemplateBinding CrossLineColor}"
                                        StrokeDashArray="{TemplateBinding StrokeDashArray}"
                                        StrokeThickness="{TemplateBinding StrokeThickness}"
                                        Visibility="{TemplateBinding ShowCrossLine,
                                                                     Converter={StaticResource BooleanToVisibilityCollapsedConverter}}" />

                                    <Line
                                        x:Name="VerticalLine"
                                        Panel.ZIndex="3"
                                        Stroke="{TemplateBinding CrossLineColor}"
                                        StrokeDashArray="{TemplateBinding StrokeDashArray}"
                                        StrokeThickness="{TemplateBinding StrokeThickness}"
                                        Visibility="{TemplateBinding ShowCrossLine,
                                                                     Converter={StaticResource BooleanToVisibilityCollapsedConverter}}" />
                                </Grid>


                            </Canvas>

                            <StackPanel Grid.Row="1" Orientation="Horizontal">
                                <!--<Label Content="X" />-->

                                <imageViewer:BorderedTextBlock Style="{StaticResource BorderedTextBlock.Compact}" Text="{Binding MousePositionToImage.X, StringFormat='X: {0:f0}', RelativeSource={RelativeSource AncestorType=imageViewer:ImageViewerBasic}}" />
                                <imageViewer:BorderedTextBlock Style="{StaticResource BorderedTextBlock.Compact}" Text="{Binding MousePositionToImage.Y, StringFormat='Y: {0:f0}', RelativeSource={RelativeSource AncestorType=imageViewer:ImageViewerBasic}}" />

                                <imageViewer:BorderedTextBlock
                                    Width="60"
                                    Style="{StaticResource BorderedTextBlock.Compact}"
                                    Text="{Binding LocalScale, StringFormat='{}{0:p2}', RelativeSource={RelativeSource AncestorType=imageViewer:ImageViewerBasic}}" />

                                <imageViewer:BorderedTextBlock
                                    Width="120"
                                    Style="{StaticResource BorderedTextBlock.Compact}"
                                    Text="{Binding PixelValueString, StringFormat='GV: {0}', RelativeSource={RelativeSource AncestorType=imageViewer:ImageViewerBasic}}" />

                                <Button x:Name="BtnFit">
                                    <Path
                                        Width="14"
                                        Margin="1"
                                        Data="{StaticResource AutoFit}"
                                        Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button, Mode=FindAncestor}}"
                                        Stretch="Uniform"
                                        Stroke="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button, Mode=FindAncestor}}" />

                                    <Button.Style>

                                        <Style TargetType="Button">
                                            <Setter Property="Background" Value="Transparent" />
                                            <Setter Property="BorderThickness" Value="1" />
                                            <Setter Property="BorderBrush" Value="Lime" />
                                            <Setter Property="Width" Value="40" />
                                            <Setter Property="Margin" Value="1" />
                                            <Setter Property="Foreground" Value="Lime" />

                                            <Setter Property="Template">

                                                <Setter.Value>
                                                    <ControlTemplate TargetType="Button">
                                                        <Border
                                                            Margin="{TemplateBinding Margin}"
                                                            Background="{TemplateBinding Background}"
                                                            BorderBrush="{TemplateBinding BorderBrush}"
                                                            BorderThickness="{TemplateBinding BorderThickness}">
                                                            <ContentPresenter />
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>

                                            </Setter>

                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Foreground" Value="LimeGreen" />
                                                    <Setter Property="Cursor" Value="Hand" />
                                                </Trigger>
                                            </Style.Triggers>

                                        </Style>

                                    </Button.Style>

                                </Button>


                            </StackPanel>

                        </Grid>

                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>


    <Style BasedOn="{StaticResource ImageViewer.Compact}" TargetType="imageViewer:ImageViewer" />


    <Style TargetType="imageViewer:ImageViewerBasic">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="imageViewer:ImageViewerBasic">

                    <Border
                        x:Name="BorderContainer"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">

                        <Canvas
                            x:Name="containerCanvas"
                            Panel.ZIndex="3"
                            ClipToBounds="True"
                            IsHitTestVisible="True">

                            <Border
                                Canvas.Left="10"
                                Canvas.Top="15"
                                Panel.ZIndex="1"
                                Background="Transparent"
                                BorderBrush="LightGray"
                                BorderThickness="1">
                                <Grid>

                                    <Grid.Resources>
                                        <Style TargetType="Label">

                                            <Setter Property="Foreground" Value="White" />
                                            <Setter Property="Background" Value="Black" />
                                            <Setter Property="BorderBrush" Value="LightGray" />
                                            <Setter Property="BorderThickness" Value="1,0,0,1" />

                                        </Style>
                                    </Grid.Resources>

                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>

                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <Label Content="X" />

                                    <Label Grid.Row="0" Grid.Column="1">
                                        <TextBlock Text="{Binding MousePositionToImage.X, RelativeSource={RelativeSource AncestorType=imageViewer:ImageViewerBasic}, StringFormat='{}{0:f0}'}" />


                                    </Label>

                                    <Label
                                        Grid.Row="1"
                                        Grid.Column="0"
                                        Content="Y" />

                                    <Label Grid.Row="1" Grid.Column="1">
                                        <TextBlock Text="{Binding MousePositionToImage.Y, RelativeSource={RelativeSource AncestorType=imageViewer:ImageViewerBasic}, StringFormat='{}{0:f0}'}" />
                                    </Label>

                                    <Label
                                        Grid.Row="2"
                                        Grid.Column="0"
                                        Content="缩放倍率" />

                                    <Label Grid.Row="2" Grid.Column="1">

                                        <TextBlock Text="{Binding LocalScale, RelativeSource={RelativeSource AncestorType=imageViewer:ImageViewerBasic}, StringFormat='{}{0:p2}'}" />
                                    </Label>


                                    <Button
                                        x:Name="BtnFit"
                                        Grid.Row="3"
                                        Grid.Column="0"
                                        Grid.ColumnSpan="2"
                                        imageViewer:GeometryIconElement.IconGeometry="{StaticResource AutoFit}"
                                        imageViewer:GeometryIconElement.IconSize="{StaticResource IconSize}"
                                        BorderBrush="Gray"
                                        BorderThickness="1"
                                        Content="Fit"
                                        Foreground="White"
                                        Style="{StaticResource IconButton}" />

                                </Grid>

                            </Border>



                            <Grid
                                x:Name="GridContainer"
                                ClipToBounds="True"
                                Row="0">

                                <!--<Grid.RenderTransform>
                                    <TransformGroup>
                                        <MatrixTransform x:Name="transform" />
                                        <ScaleTransform x:Name="scaleTransform" />
                                    </TransformGroup>
                                </Grid.RenderTransform>-->
                                <Image
                                    x:Name="ImageViewer"
                                    Width="{Binding Source.PixelWidth, RelativeSource={RelativeSource Self}}"
                                    Height="{Binding Source.PixelHeight, RelativeSource={RelativeSource Self}}"
                                    Panel.ZIndex="1"
                                    RenderOptions.BitmapScalingMode="NearestNeighbor"
                                    RenderOptions.EdgeMode="Aliased"
                                    SnapsToDevicePixels="True"
                                    Source="{TemplateBinding ImageSource}"
                                    Stretch="Uniform" />

                                <Line
                                    x:Name="HorizontalLine"
                                    Panel.ZIndex="2"
                                    Stroke="{TemplateBinding CrossLineColor}"
                                    StrokeDashArray="{TemplateBinding StrokeDashArray}"
                                    StrokeThickness="{TemplateBinding StrokeThickness}"
                                    Visibility="{TemplateBinding ShowCrossLine,
                                                                 Converter={StaticResource BooleanToVisibilityCollapsedConverter}}" />
                                <Line
                                    x:Name="VerticalLine"
                                    Panel.ZIndex="2"
                                    Stroke="{TemplateBinding CrossLineColor}"
                                    StrokeDashArray="{TemplateBinding StrokeDashArray}"
                                    StrokeThickness="{TemplateBinding StrokeThickness}"
                                    Visibility="{TemplateBinding ShowCrossLine,
                                                                 Converter={StaticResource BooleanToVisibilityCollapsedConverter}}" />
                            </Grid>

                        </Canvas>

                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="DrawShapeTypeStyle" TargetType="ListBoxItem">
        <Setter Property="Height" Value="35" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">

                        <ContentPresenter />

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <DropShadowEffect
        x:Key="DropShadowEffect"
        BlurRadius="3"
        Opacity="1"
        ShadowDepth="0"
        Color="White" />

    <DataTemplate x:Key="GeometryTypeTemplate" DataType="{x:Type imageViewer:GeometryType}">

        <Border
            x:Name="Container"
            Margin="2"
            BorderThickness="1"
            CornerRadius="3"
            ToolTip="{Binding Description}">
            <Border.InputBindings>
                <MouseBinding
                    Command="{Binding Path=DataContext.ChooseGeometryTypeCommand, RelativeSource={RelativeSource AncestorType=ItemsControl, Mode=FindAncestor}}"
                    CommandParameter="{Binding}"
                    MouseAction="LeftClick" />
            </Border.InputBindings>

            <Path
                x:Name="Path"
                Width="{StaticResource IconSize}"
                Height="{StaticResource IconSize}"
                Margin="5"
                HorizontalAlignment="Center"
                Data="{Binding IconGeometry}"
                Stretch="Uniform"
                StrokeThickness="1" />

        </Border>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IsSelected}" Value="true">
                <Setter TargetName="Container" Property="BorderBrush" Value="#006cbe" />
                <Setter TargetName="Container" Property="Background" Value="#006cbe" />
                <Setter TargetName="Path" Property="Fill" Value="White" />
                <Setter TargetName="Container" Property="Effect" Value="{StaticResource DropShadowEffect}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding IsSelected}" Value="false">
                <Setter TargetName="Container" Property="Background" Value="#eeeef2" />
                <Setter TargetName="Path" Property="Fill" Value="Black" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate DataType="{x:Type shapes:Rectangle}">
        <StackPanel Orientation="Vertical">
            <TextBlock Text="Rectangle: " />
            <TextBlock>
                <Run Text="{Binding Id, Mode=OneWay}" />
                <LineBreak />
                <Run Text="{Binding TopLeft, StringFormat='{}{0:f2} ,'}" />
                <Run Text="{Binding BottomRight, StringFormat='{}{0:f2}'}" />
            </TextBlock>
        </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type shapes:Ellipse}">
        <StackPanel Orientation="Vertical">
            <TextBlock Text="ellipse: " />
            <TextBlock>
                <Run Text="{Binding Id, Mode=OneWay}" />
                <Run Text="{Binding Center, StringFormat='{}{0:f2};'}" />
                <Run Text="{Binding RadiusX, StringFormat='{}{0:f2}, '}" />
                <Run Text="{Binding RadiusY, StringFormat='{}{0:f2}'}" />
            </TextBlock>
        </StackPanel>
    </DataTemplate>


</ResourceDictionary>