<UserControl
    x:Class="Lan.ImageViewer.ImageViewerControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:Lan.ImageViewer"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:shapes="clr-namespace:Lan.Shapes.Shapes;assembly=Lan.Shapes"
    xmlns:system="clr-namespace:System;assembly=System.Runtime"
    x:Name="Root"
    d:DataContext="{d:DesignInstance local:IImageViewerViewModel}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    Background="White"
    mc:Ignorable="d">


    <UserControl.Resources>

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Lan.ImageViewer;component/Style.xaml" />
                <ResourceDictionary Source="/Lan.ImageViewer;component/Geometries.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <system:Double x:Key="ImageWidth">32</system:Double>
            <system:Double x:Key="ImageHeight">32</system:Double>

            <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="Button" />

            <Style x:Key="DrawShapeTypeStyle" TargetType="ListBoxItem">
                <Setter Property="Height" Value="35" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">

                                <ContentPresenter />

                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <DataTemplate x:Key="GeometryTypeTemplate" DataType="{x:Type local:GeometryType}">
                <Button
                    Margin="1"
                    Background="Transparent"
                    Command="{Binding Path=DataContext.ChooseGeometryTypeCommand, RelativeSource={RelativeSource AncestorType=ItemsControl, Mode=FindAncestor}}"
                    CommandParameter="{Binding}">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="BorderThickness" Value="4" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <Border
                                            x:Name="Container"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            ToolTip="{Binding Description}">

                                            <StackPanel Orientation="Horizontal">
                                                <Path
                                                    Width="{StaticResource ImageWidth}"
                                                    Height="{StaticResource ImageHeight}"
                                                    Margin="5"
                                                    Data="{Binding IconGeometry}"
                                                    Stretch="Uniform"
                                                    Stroke="{TemplateBinding Foreground}"
                                                    StrokeThickness="2" />
                                            </StackPanel>

                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>

                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="Lime" />
                                    <Setter Property="BorderBrush" Value="Lime" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

            </DataTemplate>

            <DataTemplate DataType="{x:Type shapes:Rectangle}">
                <StackPanel Orientation="Vertical">
                    <TextBlock Text="Rectangle: " />
                    <TextBlock>
                        <Run Text="{Binding TopLeft, StringFormat='{}{0:f2};'}" />
                        <Run Text="{Binding BottomRight, StringFormat='{}{0:f2}'}" />
                    </TextBlock>
                </StackPanel>
            </DataTemplate>

            <DataTemplate DataType="{x:Type shapes:Ellipse}">
                <StackPanel Orientation="Vertical">
                    <TextBlock Text="ellipse: " />
                    <TextBlock>
                        <Run Text="{Binding Center, StringFormat='{}{0:f2};'}" />
                        <Run Text="{Binding RadiusX, StringFormat='{}{0:f2}, '}" />
                        <Run Text="{Binding RadiusY, StringFormat='{}{0:f2}'}" />
                    </TextBlock>
                </StackPanel>
            </DataTemplate>

            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

        </ResourceDictionary>

    </UserControl.Resources>


    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>

        <Grid Background="Black">

            <local:ImageViewer
                BorderBrush="LightGray"
                BorderThickness="0"
                ImageSource="{Binding Image}"
                Scale="{Binding Scale, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                SketchBoardDataManager="{Binding SketchBoardDataManager}" />

            <ItemsControl
                Margin="2,5"
                HorizontalAlignment="Right"
                BorderBrush="LightGray"
                BorderThickness="0"
                FontSize="15"
                ItemTemplate="{StaticResource GeometryTypeTemplate}"
                ItemsSource="{Binding GeometryTypeList}"
                Visibility="{Binding ShowShapeTypes, Converter={StaticResource BooleanToVisibilityConverter}}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>

        </Grid>

        <Grid
            Grid.Column="1"
            Width="180"
            Margin="5"
            Visibility="{Binding ShowSimpleCanvas, Converter={StaticResource BooleanToVisibilityConverter}}">

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <!--<TextBlock Margin="2,2" Text="Geometry Types" />-->
            <!--<ListBox
                Grid.Row="1"
                MinHeight="150"
                BorderThickness="1"
                FontSize="16"
                ItemContainerStyle="{StaticResource DrawShapeTypeStyle}"
                ItemTemplate="{StaticResource GeometryTypeTemplate}"
                ItemsSource="{Binding GeometryTypeList}"
                ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                SelectedItem="{Binding SelectedGeometryType}"
                Visibility="Collapsed">

                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel
                            Width="350"
                            FlowDirection="LeftToRight"
                            Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>


            </ListBox>-->

            <StackPanel>

                <TextBlock Text="Shape Layer" TextWrapping="Wrap" />

                <ComboBox
                    Margin="0,5"
                    DisplayMemberPath="Name"
                    ItemsSource="{Binding Layers}"
                    SelectedIndex="0"
                    SelectedItem="{Binding SelectedShapeLayer}" />

                <TextBlock Margin="2" Text="Scale rate" />

                <TextBox
                    Height="25"
                    Margin="2"
                    VerticalContentAlignment="Center"
                    FontSize="16"
                    Text="{Binding Scale, StringFormat='{}{0:p2}'}" />


                <!--<Button
                    local:GeometryIconElement.IconGeometry="{StaticResource ZoomIn}"
                    Command="{Binding ZoomInCommand}"
                    Content="Zoom In"
                    Style="{StaticResource IconButton}" />

                <Button
                    local:GeometryIconElement.IconGeometry="{StaticResource ZoomOut}"
                    Command="{Binding ZoomOutCommand}"
                    Content="Zoom Out"
                    Style="{StaticResource IconButton}" />

                <Separator />-->

            </StackPanel>

            <ListBox
                Grid.Row="1"
                ItemsSource="{Binding SketchBoardDataManager.Shapes}"
                SelectedItem="{Binding SketchBoardDataManager.CurrentGeometry, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

        </Grid>

    </Grid>


</UserControl>
